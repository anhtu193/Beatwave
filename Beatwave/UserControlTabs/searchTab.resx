<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="searchBar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAABNYAAAA0CAYAAABGtrUlAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAOiSURBVHhe7d29aiNXAIZhlS63TLnlXkLKlClTbrlN7iJF
        LiAQyG0E0i2k2iNp5kguhBcj7MZ/uDBCEUIrHK2QBzGrsU/IikhectjKfh74CnFGuoAXzUwLAAAAAPjK
        QggHm72OMb7d7H1RFJN2u12bmZmZmZmZmZk9tTXtq2lgm70LIbzZ7EXKZP/P5ovfb35sOhwO5+PxuJ7N
        ZvVyuawBAAAA4Clq2lfTwCaTSX16enpbluWs2+3+mHLZlzUlLsb4x9HR0Wy1WqWfBQAAAIDnpaqq+uTk
        5EOMsR9C+Cbls91SVLu+ubm5S98HAAAAgGdtOp3W/X7/OoTwMmW0/2r+qSaqAQAAAMC25hbRGOP7lNG2
        Nc9Ua27/TNcCAAAAAJ85Ozv7uyiKn1NOexBCOGheVOCZagAAAACw23q9rg8PD6chhFcpq92HtTfNmw7S
        NQAAAADADldXV1VZlr+mrHb/bLV3zWtEAQAAAID9bm9v67IsL1NWa7WKorhZLBbpGAAAAADYpbkdtNPp
        VCmrtVqbDx+rqkrHAAAAAMA+7Xa7Tlmt1Wo+AAAAAABfJqwBAAAAQAZhDQAAAAAyCGsAAAAAkEFYAwAA
        AIAMwhoAAAAAZBDWAAAAACCDsAYAAAAAGYQ1AAAAAMggrAEAAABABmENAAAAADIIawAAAACQQVgDAAAA
        gAzCGgAAAABkENYAAAAAIIOwBgAAAAAZhDUAAAAAyCCsAQAAAEAGYQ0AAAAAMghrAAAAAJBBWAMAAACA
        DMIaAAAAAGQQ1gAAAAAgg7AGAAAAABmENQAAAADIIKwBAAAAQAZhDQAAAAAyCGsAAAAAkGErrHU6nWq9
        XqcjAAAAAGCfrbBWFMVkuVymIwAAAABgn62wFmPsT6fTdAQAAAAA7LJYLOqiKG5SVru/FfSn8/Nzf1kD
        AAAAgEeMRqO6LMvfU1ZrtUIIL3u93sxz1gAAAABgv+Pj4w8hhB9SVntQluUvFxcXt+kaAAAAAOAzo9Ho
        rtfr/Zly2r9CCAebg+F8Pk+XAgAAAACN1WpVxxj/CiG8SDlt2+bgVb/fnzQPYQMAAAAAHqLaYDCYhhC+
        Sxltt80F38YYry8vL73MAAAAAIBnbTwe36V/qj0e1f6xufBg84XfBoPBrHnTQVPlAAAAAOA5qKqqCWr1
        cDic93q9Tth3++djmhLXvD602+3O2+12bWZmZmZmZmZm9tTX6XQ+xhjfhhBep0wGAAAAAHwdrdYnoiJo
        pO0dfRcAAAAASUVORK5CYII=
</value>
  </data>
</root>